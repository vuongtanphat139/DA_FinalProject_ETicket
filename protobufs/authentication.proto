syntax = "proto3";

package authentication;



message User {
    int32 user_id = 1;
    string username = 2;
    string password= 3;
    string fullname= 4;
    string Gender= 5;
    string dob=6;
    string phone=7;
    string email=8;
    string address=9;
    string citizenid=10;
    string resettoken=11;
}

message Company{
    int32 companyid=1;
    string companyusername=2;
    string password=3;
    string companyfullname=4;
    string phone=5;
    string email=6;
    string address=7;
}

message GetUsersRequest {}

message GetUsersResponse {
    repeated User user = 1;
}

message GetUserByIDRequest {
    int32 user_id = 1;
}
message GetUserByIDResponse {
    User user = 1;
}

message GetUserInfoByUsernameRequest {
    string username = 1;
}
message GetUserInfoByUsernameResponse {
    User user = 1;
}

message GetCompanyUserInfoByUsernameRequest {
    string companyusername = 1;
}
message GetCompanyUserInfoByUsernameResponse {
    CompanyUser company = 1;
}

message CompanyUser {

}

message GetCompanyRequest {}
message GetCompanyResponse {
    repeated Company companies = 1;
}

message GetCompanyByIDRequest {
    int32 company_id = 1;
}
message GetCompanyByIDResponse {
    Company company = 1;
}

message LoginRequest {
    string email = 1;
    string password = 2;
}
message LoginResponse {
    string message = 1;
    string token = 2;
}

message LoginCompanyRequest {
    string email = 1;
    string password = 2;
}
message LoginCompanyResponse {
    string message = 1;
    string token = 2;
}

message LogoutRequest {

}
message LogoutResponse {
    string message = 1;
}

message RegisterRequest {
    string username = 1;
    string password = 2;
    string fullname = 3;
    string gender = 4;
    string dob = 5;
    string phone = 6;
    string email = 7;
    string address = 8;
    string citizenid = 9;
}
message RegisterResponse {
    string message = 1;
}

message RegisterCompanyRequest {
    string username=1;
    string password=2;
    string companyfullname=3;
    string phone=4;
    string email=5;
    string address=6;
}
message RegisterCompanyResponse {
    string message = 1;
}

message UpdateUserRequest {
    int32 user_id = 1;
    string username = 2;
    string fullname = 3;
    string gender = 4;
    string dob = 5;
    string phone = 6;
    string email = 7;
    string address = 8;
    string citizenid = 9;
}
message UpdateUserResponse {
    string message = 1;
}

message UpdateCompanyUserRequest {
    int32 company_id = 1;
    string username = 2;
    string fullname = 3;
    string phone = 4;
    string email =5;
    string address =6;
}
message UpdateCompanyUserResponse {
    string message = 1;
}

message ResetPasswordRequest {
    string email = 1;
}
message ResetPasswordResponse {
    string message = 1;
}

message StoreResetTokenRequest {
    string email = 1;
    string reset_token = 2;
}
message StoreResetTokenResponse {
    string message = 1;
}

message SendResetTokenRequest {
    string email = 1;
}
message SendResetTokenResponse {
    string message = 1;
}




service AuthenticationService {
    rpc GetUsers(GetUsersRequest) returns (GetUsersResponse);
    rpc GetUserByID(GetUserByIDRequest) returns (GetUserByIDResponse);
    rpc GetUserInfoByUsername(GetUserInfoByUsernameRequest) returns (GetUserInfoByUsernameResponse);
    rpc GetCompanyUserInfoByUsername(GetCompanyUserInfoByUsernameRequest) returns (GetCompanyUserInfoByUsernameResponse);
    rpc GetCompany(GetCompanyRequest) returns (GetCompanyResponse);
    rpc GetCompanyByID(GetCompanyByIDRequest) returns (GetCompanyByIDResponse);
    rpc Login(LoginRequest) returns (LoginResponse);
    rpc LoginCompany(LoginCompanyRequest) returns (LoginCompanyResponse);
    rpc Logout(LogoutRequest) returns (LogoutResponse);
    
    rpc Register(RegisterRequest) returns (RegisterResponse);
    rpc RegisterCompany(RegisterCompanyRequest) returns (RegisterCompanyResponse);
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
    rpc UpdateCompanyUser(UpdateCompanyUserRequest) returns (UpdateCompanyUserResponse);

    rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse);

    rpc StoreResetToken(StoreResetTokenRequest) returns (StoreResetTokenResponse);
    rpc SendResetToken(SendResetTokenRequest) returns (SendResetTokenResponse);
    
}